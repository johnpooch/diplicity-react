/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/schema/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description OpenApi3 schema for this API. Format can be selected via content negotiation.
         *
         *     - YAML: application/vnd.oai.openapi
         *     - JSON: application/vnd.oai.openapi+json */
        get: operations["api_schema_retrieve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["auth_login_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/devices/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["devices_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/{game_id}/confirm/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_confirm_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/{game_id}/join/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_join_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/{game_id}/leave/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["game_leave_destroy"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/game/{game_id}/order/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["game_order_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/games/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["games_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/variants/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["variants_list"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        CurrentPhase: {
            season: string;
            year: string;
            phase_type: string;
            remaining_time: string;
            units: components["schemas"]["CurrentPhaseUnits"][];
            supply_centers: components["schemas"]["CurrentPhaseSupplyCenters"][];
        };
        CurrentPhaseSupplyCenters: {
            province: string;
            nation: string;
        };
        CurrentPhaseUnits: {
            type: string;
            nation: string;
            province: string;
        };
        FCMDevice: {
            readonly id: number;
            name?: string | null;
            /** Registration token */
            registration_id: string;
            /** @description Unique device identifier */
            device_id?: string | null;
            /**
             * Is active
             * @description Inactive devices will not be sent notifications
             * @default true
             */
            active: boolean;
            /**
             * Creation date
             * Format: date-time
             */
            readonly date_created: string | null;
            type: components["schemas"]["TypeEnum"];
        };
        GameCreateRequest: {
            name: string;
            variant: string;
        };
        GameListResponse: {
            id: number;
            name: string;
            status: string;
            movement_phase_duration: string;
            current_phase: components["schemas"]["CurrentPhase"];
            variant: components["schemas"]["Variant"];
            members: components["schemas"]["Members"][];
        };
        GameVariantNations: {
            name: string;
            color: string;
        };
        LoginRequest: {
            id_token: string;
        };
        LoginResponse: {
            id: string;
            email: string;
            username: string;
            access_token: string;
            refresh_token: string;
        };
        Members: {
            user: components["schemas"]["User"];
            nation: string;
        };
        OrderCreateRequest: {
            order_type: string;
            source: string;
            target?: string | null;
            aux?: string | null;
        };
        /**
         * @description * `ios` - ios
         *     * `android` - android
         *     * `web` - web
         * @enum {string}
         */
        TypeEnum: "ios" | "android" | "web";
        User: {
            username: string;
            readonly current_user: boolean;
        };
        Variant: {
            id: string;
            name: string;
            description: string;
            author: string;
            nations: components["schemas"]["GameVariantNations"][];
        };
        VariantListResponse: {
            id: string;
            name: string;
            description: string;
            author?: string;
            nations: components["schemas"]["VariantNations"][];
            start: components["schemas"]["VariantStart"];
        };
        VariantNations: {
            name: string;
            color: string;
        };
        VariantStart: {
            season: string;
            year: string;
            phase_type: string;
            units: components["schemas"]["VariantStartUnits"][];
            supply_centers: components["schemas"]["VariantStartSupplyCenters"][];
        };
        VariantStartSupplyCenters: {
            province: string;
            nation: string;
        };
        VariantStartUnits: {
            type: string;
            nation: string;
            province: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    api_schema_retrieve: {
        parameters: {
            query?: {
                format?: "json" | "yaml";
                lang?: "af" | "ar" | "ar-dz" | "ast" | "az" | "be" | "bg" | "bn" | "br" | "bs" | "ca" | "ckb" | "cs" | "cy" | "da" | "de" | "dsb" | "el" | "en" | "en-au" | "en-gb" | "eo" | "es" | "es-ar" | "es-co" | "es-mx" | "es-ni" | "es-ve" | "et" | "eu" | "fa" | "fi" | "fr" | "fy" | "ga" | "gd" | "gl" | "he" | "hi" | "hr" | "hsb" | "hu" | "hy" | "ia" | "id" | "ig" | "io" | "is" | "it" | "ja" | "ka" | "kab" | "kk" | "km" | "kn" | "ko" | "ky" | "lb" | "lt" | "lv" | "mk" | "ml" | "mn" | "mr" | "ms" | "my" | "nb" | "ne" | "nl" | "nn" | "os" | "pa" | "pl" | "pt" | "pt-br" | "ro" | "ru" | "sk" | "sl" | "sq" | "sr" | "sr-latn" | "sv" | "sw" | "ta" | "te" | "tg" | "th" | "tk" | "tr" | "tt" | "udm" | "uk" | "ur" | "uz" | "vi" | "zh-hans" | "zh-hant";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/vnd.oai.openapi": {
                        [key: string]: unknown;
                    };
                    "application/yaml": {
                        [key: string]: unknown;
                    };
                    "application/vnd.oai.openapi+json": {
                        [key: string]: unknown;
                    };
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
        };
    };
    auth_login_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginRequest"];
                "application/x-www-form-urlencoded": components["schemas"]["LoginRequest"];
                "multipart/form-data": components["schemas"]["LoginRequest"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["LoginResponse"];
                };
            };
        };
    };
    devices_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FCMDevice"];
                "application/x-www-form-urlencoded": components["schemas"]["FCMDevice"];
                "multipart/form-data": components["schemas"]["FCMDevice"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FCMDevice"];
                };
            };
        };
    };
    game_create: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["GameCreateRequest"];
                "application/x-www-form-urlencoded": components["schemas"]["GameCreateRequest"];
                "multipart/form-data": components["schemas"]["GameCreateRequest"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GameCreateRequest"];
                };
            };
        };
    };
    game_confirm_create: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                game_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    game_join_create: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                game_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    game_leave_destroy: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                game_id: number;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description No response body */
            204: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    game_order_create: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                game_id: number;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["OrderCreateRequest"];
                "application/x-www-form-urlencoded": components["schemas"]["OrderCreateRequest"];
                "multipart/form-data": components["schemas"]["OrderCreateRequest"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["OrderCreateRequest"];
                };
            };
        };
    };
    games_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["GameListResponse"][];
                };
            };
        };
    };
    variants_list: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["VariantListResponse"][];
                };
            };
        };
    };
}
