name: Build and Deploy Service

on:
  push:
    branches:
      - main

env:
  REGISTRY_NAME: diplicityregistry
  SERVICE_IMAGE: diplicityregistry.azurecr.io/service
  WEBAPP_NAME_SERVICE: diplicity-service
  RESOURCE_GROUP: diplicity-rg

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to Azure Container Registry
        run: |
          echo ${{ secrets.REGISTRY_PASSWORD }} | docker login ${{ env.REGISTRY_NAME }}.azurecr.io -u ${{ secrets.REGISTRY_USERNAME }} --password-stdin

      - name: Build and push service image
        run: |
          docker build -t ${{ env.SERVICE_IMAGE }}:${{ github.sha }} -f service/Dockerfile ./service
          docker push ${{ env.SERVICE_IMAGE }}:${{ github.sha }}

      - name: Deploy to Azure Web App
        run: |
          az webapp config container set \
            --name ${{ env.WEBAPP_NAME_SERVICE }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --docker-custom-image-name ${{ env.SERVICE_IMAGE }}:${{ github.sha }} \
            --docker-registry-server-url https://${{ env.REGISTRY_NAME }}.azurecr.io \
            --docker-registry-server-user ${{ secrets.REGISTRY_USERNAME }} \
            --docker-registry-server-password ${{ secrets.REGISTRY_PASSWORD }}

          az webapp config appsettings set \
            --name ${{ env.WEBAPP_NAME_SERVICE }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --settings \
              GIT_SHA=${{ github.sha }} \
              ENVIRONMENT=production \
              DJANGO_ALLOWED_HOSTS="diplicity-service.azurewebsites.net,169.254.129.6"

  wait-for-service:
    needs: [build-and-deploy]
    runs-on: ubuntu-latest
    if: success()
    steps:
      - name: Wait for service to be ready
        run: |
          max_attempts=30
          attempt=1
          while [ $attempt -le $max_attempts ]; do
            if curl -s -f "https://diplicity-service.azurewebsites.net/version" | grep -q "${{ github.sha }}"; then
              echo "Service is ready with correct version!"
              exit 0
            fi
            echo "Attempt $attempt of $max_attempts: Service not ready yet or wrong version, waiting..."
            sleep 10
            attempt=$((attempt + 1))
          done
          echo "Service failed to become ready with correct version after $max_attempts attempts"
          exit 1
