openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /api/schema/:
    get:
      operationId: apiSchemaRetrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/token/refresh/:
    post:
      operationId: apiTokenRefreshCreate
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /auth/login/:
    post:
      operationId: authLoginCreate
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Auth'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Auth'
          description: ''
  /devices/:
    get:
      operationId: devicesList
      tags:
      - devices
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FCMDevice'
          description: ''
    post:
      operationId: devicesCreate
      tags:
      - devices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FCMDevice'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FCMDevice'
          description: ''
    put:
      operationId: devicesUpdate
      tags:
      - devices
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FCMDevice'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FCMDevice'
          description: ''
  /game/:
    post:
      operationId: gameCreate
      tags:
      - game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
          description: ''
  /game/{gameId}/:
    get:
      operationId: gameRetrieve
      parameters:
      - in: path
        name: gameId
        schema:
          type: string
        required: true
      tags:
      - game
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
          description: ''
  /game/{gameId}/confirm-phase/:
    put:
      operationId: gameConfirmPhaseUpdate
      description: |-
        Used by views that have a game parameter in the URL. Provides a get_game
        method that returns the game object. Also adds game to the serializer context.
      parameters:
      - in: path
        name: gameId
        schema:
          type: string
        required: true
      tags:
      - game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhaseState'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhaseState'
          description: ''
    patch:
      operationId: gameConfirmPhasePartialUpdate
      description: |-
        Used by views that have a game parameter in the URL. Provides a get_game
        method that returns the game object. Also adds game to the serializer context.
      parameters:
      - in: path
        name: gameId
        schema:
          type: string
        required: true
      tags:
      - game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPhaseState'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhaseState'
          description: ''
  /game/{gameId}/join/:
    post:
      operationId: gameJoinCreate
      description: |-
        Used by views that have a game parameter in the URL. Provides a get_game
        method that returns the game object. Also adds game to the serializer context.
      parameters:
      - in: path
        name: gameId
        schema:
          type: string
        required: true
      tags:
      - game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
          description: ''
  /game/{gameId}/leave/:
    delete:
      operationId: gameLeaveDestroy
      description: |-
        Used by views that have a game parameter in the URL. Provides a get_game
        method that returns the game object. Also adds game to the serializer context.
      parameters:
      - in: path
        name: gameId
        schema:
          type: string
        required: true
      tags:
      - game
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /game/{gameId}/orders/:
    post:
      operationId: gameOrdersCreate
      description: |-
        Used by views that have a game parameter in the URL. Provides a get_phase
        method that returns the current phase for the game. Also adds phase to the serializer context.
      parameters:
      - in: path
        name: gameId
        schema:
          type: string
        required: true
      tags:
      - game
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: ''
  /game/{gameId}/orders/{phaseId}:
    get:
      operationId: gameOrdersList
      description: |-
        Used by views that have a phase parameter in the URL. Provides a get_phase
        method that returns the phase object. Also adds phase to the serializer context.
      parameters:
      - in: path
        name: gameId
        schema:
          type: string
        required: true
      - in: path
        name: phaseId
        schema:
          type: integer
        required: true
      tags:
      - game
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: ''
  /game/{gameId}/orders/delete/{sourceId}:
    delete:
      operationId: gameOrdersDeleteDestroy
      description: |-
        Used by views that have a game parameter in the URL. Provides a get_phase
        method that returns the current phase for the game. Also adds phase to the serializer context.
      parameters:
      - in: path
        name: gameId
        schema:
          type: string
        required: true
      - in: path
        name: sourceId
        schema:
          type: string
        required: true
      tags:
      - game
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /game/{gameId}/phase-state/:
    get:
      operationId: gamePhaseStateRetrieve
      description: |-
        Used by views that have a game parameter in the URL. Provides a get_game
        method that returns the game object. Also adds game to the serializer context.
      parameters:
      - in: path
        name: gameId
        schema:
          type: string
        required: true
      tags:
      - game
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhaseState'
          description: ''
  /games/:
    get:
      operationId: gamesList
      parameters:
      - in: query
        name: can_join
        schema:
          type: boolean
      - in: query
        name: mine
        schema:
          type: boolean
      tags:
      - games
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'
          description: ''
  /games/{gameId}/channels/:
    get:
      operationId: gamesChannelsList
      description: |-
        Used by views that have a game parameter in the URL. Provides a get_game
        method that returns the game object. Also adds game to the serializer context.
      parameters:
      - in: path
        name: gameId
        schema:
          type: string
        required: true
      tags:
      - games
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
          description: ''
  /games/{gameId}/channels/{channelId}/messages/create/:
    post:
      operationId: gamesChannelsMessagesCreateCreate
      description: |-
        Used by views that have a game parameter in the URL. Provides a get_game
        method that returns the game object. Also adds game to the serializer context.
      parameters:
      - in: path
        name: channelId
        schema:
          type: integer
        required: true
      - in: path
        name: gameId
        schema:
          type: string
        required: true
      tags:
      - games
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChannelMessage'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChannelMessage'
          description: ''
  /games/{gameId}/channels/create/:
    post:
      operationId: gamesChannelsCreateCreate
      description: |-
        Used by views that have a game parameter in the URL. Provides a get_game
        method that returns the game object. Also adds game to the serializer context.
      parameters:
      - in: path
        name: gameId
        schema:
          type: string
        required: true
      tags:
      - games
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Channel'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
  /phase/resolve/:
    post:
      operationId: phaseResolveCreate
      tags:
      - phase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PhaseResolveResponse'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PhaseResolveResponse'
          description: ''
  /user/:
    get:
      operationId: userRetrieve
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
          description: ''
  /variants/:
    get:
      operationId: variantsList
      tags:
      - variants
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Variant'
          description: ''
  /version/:
    get:
      operationId: versionRetrieve
      tags:
      - version
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: ''
components:
  schemas:
    Auth:
      type: object
      properties:
        idToken:
          type: string
          writeOnly: true
        id:
          type: integer
          readOnly: true
        email:
          type: string
          readOnly: true
        username:
          type: string
          readOnly: true
        accessToken:
          type: string
          readOnly: true
        refreshToken:
          type: string
          readOnly: true
      required:
      - accessToken
      - email
      - id
      - idToken
      - refreshToken
      - username
    Channel:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        private:
          type: boolean
          readOnly: true
        messages:
          type: array
          items:
            $ref: '#/components/schemas/ChannelMessage'
          readOnly: true
        memberIds:
          type: array
          items:
            type: integer
          writeOnly: true
      required:
      - id
      - memberIds
      - messages
      - name
      - private
    ChannelMember:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        name:
          type: string
        picture:
          type: string
        nation:
          $ref: '#/components/schemas/Nation'
        isCurrentUser:
          type: boolean
          readOnly: true
      required:
      - id
      - isCurrentUser
      - name
      - nation
      - picture
      - username
    ChannelMessage:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        body:
          type: string
          maxLength: 1000
        sender:
          allOf:
          - $ref: '#/components/schemas/ChannelMember'
          readOnly: true
        createdAt:
          type: string
          format: date-time
          readOnly: true
      required:
      - body
      - createdAt
      - id
      - sender
    FCMDevice:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          nullable: true
          maxLength: 255
        registrationId:
          type: string
          title: Registration token
        deviceId:
          type: string
          nullable: true
          description: Unique device identifier
          maxLength: 255
        active:
          type: boolean
          default: true
          title: Is active
          description: Inactive devices will not be sent notifications
        dateCreated:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Creation date
        type:
          $ref: '#/components/schemas/TypeEnum'
      required:
      - dateCreated
      - id
      - registrationId
      - type
    Game:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        status:
          type: string
          readOnly: true
        canJoin:
          type: boolean
          readOnly: true
        canLeave:
          type: boolean
          readOnly: true
        phases:
          type: array
          items:
            $ref: '#/components/schemas/Phase'
          readOnly: true
        variant:
          allOf:
          - $ref: '#/components/schemas/Variant'
          readOnly: true
        members:
          type: array
          items:
            $ref: '#/components/schemas/Member'
          readOnly: true
        phaseConfirmed:
          type: boolean
          readOnly: true
        name:
          type: string
        variantId:
          type: string
          writeOnly: true
        nationAssignment:
          $ref: '#/components/schemas/NationAssignmentEnum'
        movementPhaseDuration:
          allOf:
          - $ref: '#/components/schemas/MovementPhaseDurationEnum'
          default: 24 hours
        private:
          type: boolean
      required:
      - canJoin
      - canLeave
      - id
      - members
      - name
      - nationAssignment
      - phaseConfirmed
      - phases
      - private
      - status
      - variant
      - variantId
    GameSummary:
      type: object
      properties:
        name:
          type: string
        status:
          type: string
      required:
      - name
      - status
    Member:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          readOnly: true
        name:
          type: string
          readOnly: true
        picture:
          type: string
          readOnly: true
        nation:
          type: string
          readOnly: true
          nullable: true
        isCurrentUser:
          type: boolean
          readOnly: true
        game:
          allOf:
          - $ref: '#/components/schemas/GameSummary'
          readOnly: true
        supplyCenterCount:
          type: integer
          readOnly: true
      required:
      - game
      - id
      - isCurrentUser
      - name
      - nation
      - picture
      - supplyCenterCount
      - username
    MovementPhaseDurationEnum:
      enum:
      - 24 hours
      - 48 hours
      - 1 week
      type: string
      description: |-
        * `24 hours` - 24 hours
        * `48 hours` - 48 hours
        * `1 week` - 1 week
    Nation:
      type: object
      properties:
        name:
          type: string
        color:
          type: string
      required:
      - color
      - name
    NationAssignmentEnum:
      enum:
      - random
      - ordered
      type: string
      description: |-
        * `random` - Random
        * `ordered` - Ordered
    NullEnum:
      enum:
      - null
    Order:
      type: object
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/Province'
          readOnly: true
        target:
          allOf:
          - $ref: '#/components/schemas/Province'
          readOnly: true
        aux:
          allOf:
          - $ref: '#/components/schemas/Province'
          readOnly: true
        namedCoast:
          allOf:
          - $ref: '#/components/schemas/Province'
          readOnly: true
        resolution:
          allOf:
          - $ref: '#/components/schemas/OrderResolution'
          readOnly: true
        options:
          type: array
          items:
            $ref: '#/components/schemas/OrderOption'
          readOnly: true
        orderType:
          allOf:
          - $ref: '#/components/schemas/OrderTypeEnum'
          readOnly: true
        unitType:
          allOf:
          - $ref: '#/components/schemas/UnitTypeEnum'
          readOnly: true
        nation:
          allOf:
          - $ref: '#/components/schemas/Nation'
          readOnly: true
        complete:
          type: boolean
          readOnly: true
          nullable: true
        step:
          readOnly: true
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/StepEnum'
          - $ref: '#/components/schemas/NullEnum'
        title:
          type: string
          readOnly: true
          nullable: true
        selected:
          type: array
          items:
            type: string
      required:
      - aux
      - complete
      - namedCoast
      - nation
      - options
      - orderType
      - resolution
      - source
      - step
      - target
      - title
      - unitType
    OrderOption:
      type: object
      properties:
        value:
          type: string
        label:
          type: string
      required:
      - label
      - value
    OrderResolution:
      type: object
      properties:
        status:
          type: string
        by:
          allOf:
          - $ref: '#/components/schemas/Province'
          nullable: true
      required:
      - by
      - status
    OrderTypeEnum:
      enum:
      - Move
      - MoveViaConvoy
      - Hold
      - Support
      - Convoy
      - Build
      - Disband
      type: string
      description: |-
        * `Move` - Move
        * `MoveViaConvoy` - Move via Convoy
        * `Hold` - Hold
        * `Support` - Support
        * `Convoy` - Convoy
        * `Build` - Build
        * `Disband` - Disband
    PatchedPhaseState:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        ordersConfirmed:
          type: boolean
          readOnly: true
        eliminated:
          type: boolean
          readOnly: true
        orderableProvinces:
          type: array
          items:
            $ref: '#/components/schemas/Province'
          readOnly: true
    Phase:
      type: object
      properties:
        id:
          type: integer
        ordinal:
          type: integer
        season:
          type: string
        year:
          type: integer
        name:
          type: string
        type:
          type: string
        remainingTime:
          type: integer
        scheduledResolution:
          type: string
          format: date-time
        status:
          $ref: '#/components/schemas/StatusEnum'
        units:
          type: array
          items:
            $ref: '#/components/schemas/Unit'
        supplyCenters:
          type: array
          items:
            $ref: '#/components/schemas/SupplyCenter'
        options: {}
      required:
      - id
      - name
      - options
      - ordinal
      - remainingTime
      - scheduledResolution
      - season
      - status
      - supplyCenters
      - type
      - units
      - year
    PhaseResolveResponse:
      type: object
      properties:
        resolved:
          type: integer
        failed:
          type: integer
      required:
      - failed
      - resolved
    PhaseState:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        ordersConfirmed:
          type: boolean
          readOnly: true
        eliminated:
          type: boolean
          readOnly: true
        orderableProvinces:
          type: array
          items:
            $ref: '#/components/schemas/Province'
          readOnly: true
      required:
      - eliminated
      - id
      - orderableProvinces
      - ordersConfirmed
    Province:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        supplyCenter:
          type: boolean
        parentId:
          type: string
          nullable: true
        namedCoastIds:
          type: array
          items:
            type: string
          readOnly: true
      required:
      - id
      - name
      - namedCoastIds
      - parentId
      - supplyCenter
      - type
    StatusEnum:
      enum:
      - pending
      - active
      - completed
      - template
      type: string
      description: |-
        * `pending` - Pending
        * `active` - Active
        * `completed` - Completed
        * `template` - Template
    StepEnum:
      enum:
      - select-order-type
      - select-unit-type
      - select-target
      - select-aux
      - select-named-coast
      - completed
      type: string
      description: |-
        * `select-order-type` - select-order-type
        * `select-unit-type` - select-unit-type
        * `select-target` - select-target
        * `select-aux` - select-aux
        * `select-named-coast` - select-named-coast
        * `completed` - completed
    SupplyCenter:
      type: object
      properties:
        province:
          $ref: '#/components/schemas/Province'
        nation:
          $ref: '#/components/schemas/Nation'
      required:
      - nation
      - province
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
    TypeEnum:
      enum:
      - ios
      - android
      - web
      type: string
      description: |-
        * `ios` - ios
        * `android` - android
        * `web` - web
    Unit:
      type: object
      properties:
        type:
          type: string
        nation:
          $ref: '#/components/schemas/Nation'
        province:
          $ref: '#/components/schemas/Province'
        dislodgedBy:
          type: object
          additionalProperties: {}
          nullable: true
          readOnly: true
      required:
      - dislodgedBy
      - nation
      - province
      - type
    UnitTypeEnum:
      enum:
      - Army
      - Fleet
      type: string
      description: |-
        * `Army` - Army
        * `Fleet` - Fleet
    UserProfile:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        picture:
          type: string
        username:
          type: string
        email:
          type: string
      required:
      - email
      - id
      - name
      - picture
      - username
    Variant:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        author:
          type: string
        nations:
          type: array
          items:
            $ref: '#/components/schemas/Nation'
        provinces:
          type: array
          items:
            $ref: '#/components/schemas/Province'
        templatePhase:
          $ref: '#/components/schemas/Phase'
      required:
      - description
      - id
      - name
      - nations
      - provinces
      - templatePhase
    Version:
      type: object
      properties:
        environment:
          type: string
        version:
          type: string
      required:
      - environment
      - version
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
