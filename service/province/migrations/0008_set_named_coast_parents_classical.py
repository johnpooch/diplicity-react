# Generated by Django 4.2.24 on 2025-09-28 13:49

from django.db import migrations


def set_named_coast_parents(apps, schema_editor):
    Variant = apps.get_model("variant", "Variant")
    Province = apps.get_model("province", "Province")

    # Get the classical variant
    classical_variant = Variant.objects.get(id="classical")

    # Define named coast to parent mappings
    named_coast_mappings = {
        "spa/nc": "spa",
        "spa/sc": "spa",
        "bul/ec": "bul",
        "bul/sc": "bul",
        "stp/nc": "stp",
        "stp/sc": "stp",
    }

    # Set parent relationships for named coasts
    for named_coast_id, parent_id in named_coast_mappings.items():
        try:
            named_coast = Province.objects.get(
                province_id=named_coast_id,
                variant=classical_variant
            )
            parent = Province.objects.get(
                province_id=parent_id,
                variant=classical_variant
            )
            named_coast.parent = parent
            named_coast.save()
        except Province.DoesNotExist:
            # Skip if province doesn't exist (e.g., in different variants)
            pass


def reverse_set_named_coast_parents(apps, schema_editor):
    Province = apps.get_model("province", "Province")

    # Clear all parent relationships for named coasts
    named_coast_ids = ["spa/nc", "spa/sc", "bul/ec", "bul/sc", "stp/nc", "stp/sc"]
    Province.objects.filter(province_id__in=named_coast_ids).update(parent=None)


class Migration(migrations.Migration):

    dependencies = [
        ('province', '0007_add_parent_field'),
    ]

    operations = [
        migrations.RunPython(
            set_named_coast_parents,
            reverse_set_named_coast_parents,
        ),
    ]
